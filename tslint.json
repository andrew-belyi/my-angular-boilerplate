{
  "extends": "tslint-config-airbnb",
  "rulesDirectory": [
    "codelyzer",
    "tslint-consistent-codestyle"
  ],
  "rules": {
    "directive-selector": [true, "attribute", ["app"], "camelCase"],
    "component-selector": [true, "element", ["app"], "kebab-case"],
    "max-line-length": [
      true,
      {
        "limit": 140,
        "ignore-pattern": "^import |^export {(.*?)}|class [a-zA-Z]+ implements |// "
      }
    ],
    "member-ordering": [
      true,
      {
        "order": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "function-name": false,
    "prefer-function-over-method": [
      true,
      "allow-public",
      "allow-protected"
    ],
    "no-invalid-this": [
      true,
      "check-function-in-method"
    ],
    "align": {
      "options": [
        "parameters",
        "statements"
      ]
    },
    "array-type": false,
    "arrow-return-shorthand": true,
    "curly": true,
    "deprecation": {
      "severity": "warning"
    },
    "component-class-suffix": true,
    "contextual-lifecycle": true,
    "directive-class-suffix": true,
    "eofline": true,
    "import-blacklist": [
      true,
      "rxjs/Rx"
    ],
    "import-spacing": true,
    "indent": {
      "options": [
        "spaces"
      ]
    },
    "max-classes-per-file": false,
    "no-console": [
      true,
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-empty": false,
    "no-inferrable-types": [
      true,
      "ignore-params"
    ],
    "no-non-null-assertion": true,
    "no-redundant-jsdoc": true,
    "no-switch-case-fall-through": true,
    "no-var-requires": false,
    "object-literal-key-quotes": [
      true,
      "as-needed"
    ],
    "quotemark": [
      true,
      "single"
    ],
    "semicolon": {
      "options": [
        "always"
      ]
    },
    "space-before-function-paren": {
      "options": {
        "anonymous": "never",
        "asyncArrow": "always",
        "constructor": "never",
        "method": "never",
        "named": "never"
      }
    },
    "typedef": {
      "options": [
        "call-signature",
        "parameter"
      ]
    },
    "typedef-whitespace": {
      "options": [
        {
          "call-signature": "nospace",
          "index-signature": "nospace",
          "parameter": "nospace",
          "property-declaration": "nospace",
          "variable-declaration": "nospace"
        },
        {
          "call-signature": "onespace",
          "index-signature": "onespace",
          "parameter": "onespace",
          "property-declaration": "onespace",
          "variable-declaration": "onespace"
        }
      ]
    },
    "variable-name": {
      "options": [
        "ban-keywords"
      ]
    },
    "whitespace": {
      "options": [
        "check-branch",
        "check-decl",
        "check-operator",
        "check-separator",
        "check-type",
        "check-typecast"
      ]
    },
    "no-conflicting-lifecycle": true,
    "no-host-metadata-property": true,
    "no-input-rename": true,
    "no-inputs-metadata-property": true,
    "no-output-native": true,
    "no-output-on-prefix": true,
    "no-output-rename": true,
    "no-outputs-metadata-property": true,
    "template-banana-in-box": true,
    "template-no-negated-async": true,
    "use-lifecycle-interface": true,
    "use-pipe-transform-interface": true,
    "ordered-imports": [
      true,
      {
        "module-source-path": "full",
        "import-sources-order": "any",
        "named-imports-order": "any",
        "grouped-imports": true,
        "groups": [{
            "name": "angular",
            "match": "^(@angular)",
            "order": 1
          }, {
            "name": "ngrx",
            "match": "^(@ngrx)",
            "order": 2
          }, {
            "name": "rxjs",
            "match": "^(rxjs)",
            "order": 3
          }, {
            "name": "env",
            "match": "^(@env)",
            "order": 4
          }, {
            "name": "modules",
            "match": "(.module$)",
            "order": 7
          }, {
            "name": "pages",
            "match": "(-page.component$)",
            "order": 8
          }, {
            "name": "containers",
            "match": "(-container.component$)",
            "order": 9
          }, {
            "name": "components",
            "match": "(.component$)",
            "order": 10
          }, {
            "name": "directives",
            "match": "(.directive$)",
            "order": 11
          }, {
            "name": "services",
            "match": "(.service$)",
            "order": 12
          }, {
            "name": "providers",
            "match": "(.provider$)",
            "order": 13
          }, {
            "name": "guards",
            "match": "(.guard$)",
            "order": 14
          }, {
            "name": "pipes",
            "match": "(.pipe$)",
            "order": 15
          }, {
            "name": "utils",
            "match": "(.util$)",
            "order": 16
          }, {
            "name": "interfaces",
            "match": "(.interface$)",
            "order": 17
          }, {
            "name": "models",
            "match": "(.model$)",
            "order": 18
          }, {
            "name": "constants",
            "match": "(.constant$)",
            "order": 19
          }, {
            "name": "actions",
            "match": "(.action$)",
            "order": 21
          }, {
            "name": "effects",
            "match": "(.effect$)",
            "order": 22
          }, {
            "name": "reducers",
            "match": "(.reducer$)",
            "order": 23
          }, {
            "name": "selectors",
            "match": "(.selector$)",
            "order": 24
          }, {
            "name": "workers",
            "match": "^(@workers)",
            "order": 25
          }, {
            "name": "other",
            "match": ".*",
            "order": 26
          }
        ]
      }
    ],
    "naming-convention": [ true,
      {"type": "default", "format": "camelCase", "leadingUnderscore": "forbid", "trailingUnderscore": "forbid"},
      {"type": "variable", "modifiers": ["const"], "format": ["camelCase", "UPPER_CASE"]},
      {"type": "functionVariable", "modifiers": ["export", "const"], "format": "camelCase"},
      {"type": "parameter", "modifiers": "unused", "leadingUnderscore": "allow"},
      {"type": "member", "modifiers": "private", "leadingUnderscore": "require"},
      {"type": "member", "modifiers": "protected", "leadingUnderscore": "require"},
      {"type": "method", "filter": "^toJSON$", "format": null},
      {"type": "property", "modifiers": ["public", "static", "const"], "format": "UPPER_CASE"},
      {"type": "type", "format": "PascalCase"},
      {"type": "class", "modifiers": "abstract", "prefix": "Abstract"},
      {"type": "interface", "prefix": "I"},
      {"type": "genericTypeParameter", "prefix": "T"},
      {"type": "enumMember", "format": "PascalCase"}
    ]
  }
}
